{
  "task_id": 84,
  "description": "Find the n-th number in the Newman-Conway sequence, which is defined by P(1) = 1, P(2) = 1, and P(n) = P(P(n-1)) + P(n - P(n-1)) for n > 2.",
  "input_format": "A single integer n (1 \u2264 n \u2264 12000), given in a separate line.",
  "output_format": "A single integer, the n-th term of the sequence, followed by a newline.",
  "prompt": "; Find the n-th number in the Newman-Conway sequence, which is defined by P(1) = 1, P(2) = 1, and P(n) = P(P(n-1)) + P(n - P(n-1)) for n > 2.\n; Input format: A single integer n (1 \u2264 n \u2264 12000), given in a separate line.\n; Output format: A single integer, the n-th term of the sequence, followed by a newline.\n\n#lang racket\n\n",
  "completions": [
    "(define (newman-conway n)\n  (define (helper k)\n    (cond\n      [(= k 1) 1]\n      [(= k 2) 1]\n      [else (+ (helper (helper (- k 1))) (helper (- k (helper (- k 1)))))]))\n  (helper n))\n\n; Example usage:\n; (newman-conway 1) => 1\n; (newman-conway 2) => 1\n; (newman-conway 3) => 2\n; (newman-conway 4) => 2\n; (newman-conway 5) => 3\n; (newman-conway 6) => 3\n; (newman-conway 7) => 4\n; (newman-conway 8) => 4\n; (newman-conway 9) => 5\n; (newman-conway 10) => 5\n; (newman-conway 11) => 6\n; (newman-conway 12) => 6\n; (newman-conway 13) => 7\n; (newman-conway 14) => 7\n; (newman-conway 15) => 8\n; (newman-conway 16) => 8\n; (newman-conway 17) => 9\n; (newman-conway 18) => 9\n; (newman-conway 19) => 10\n; (newman-conway 20) => 10\n; (newman-conway 21) => 11\n; (newman-conway 22) => 11\n; (newman-conway 23) => 12\n; (newman-conway 24) => 12\n; (newman-conway 25) => 13\n; (newman-conway 26) => 13\n; (newman-conway 27) => 14\n; (newman-conway 28) => 14\n; (newman-conway 29) => 15\n; (newman-conway 30) => 15\n; (newman-conway 31) => 16\n",
    "(define (newman-conway n)\n  (define (helper a b)\n    (if (= n 1)\n        1\n        (helper (helper a b) (helper b a))))\n  (helper 1 1))\n\n(define (main)\n  (displayln (newman-conway (read))))\n\n(main)",
    "(define (newman-conway n)\n  (define (helper a b)\n    (if (= n 1)\n        1\n        (helper (helper a b) (helper (+ a b) b))))\n  (helper 1 1))\n\n; Example usage:\n; (newman-conway 1) => 1\n; (newman-conway 2) => 1\n; (newman-conway 3) => 2\n; (newman-conway 4) => 2\n; (newman-conway 5) => 3\n; (newman-conway 6) => 3\n; (newman-conway 7) => 4\n; (newman-conway 8) => 4\n; (newman-conway 9) => 5\n; (newman-conway 10) => 5\n; (newman-conway 11) => 6\n; (newman-conway 12) => 6\n; (newman-conway 13) => 7\n; (newman-conway 14) => 7\n; (newman-conway 15) => 8\n; (newman-conway 16) => 8\n; (newman-conway 17) => 9\n; (newman-conway 18) => 9\n; (newman-conway 19) => 10\n; (newman-conway 20) => 10\n; (newman-conway 21) => 11\n; (newman-conway 22) => 11\n; (newman-conway 23) => 12\n; (newman-conway 24) => 12\n; (newman-conway 25) => 13\n; (newman-conway 26) => 13\n; (newman-conway 27) => 14\n; (newman-conway 28) => 14\n; (newman-conway 29) => 15\n; (newman-conway 30) => 15\n; (newman-conway 31) => 16\n; (newman-conway 32) => 16\n; (new",
    "(define (newman-conway n)\n  (define (helper a b)\n    (if (= n 1)\n        1\n        (helper (helper a b) (- n (helper a b)))))\n  (helper 1 1))\n\n(define (main)\n  (displayln (newman-conway (read))))\n\n(main)",
    "(define (newman-conway n)\n  (define (helper a b)\n    (if (= a b)\n        b\n        (helper (helper a (- b 1)) (helper b (- b 1)))))\n  (helper 1 1))\n\n(newman-conway (read))"
  ],
  "test_cases": [
    {
      "input": "10",
      "output": "6"
    },
    {
      "input": "2",
      "output": "1"
    },
    {
      "input": "3",
      "output": "2"
    }
  ]
}